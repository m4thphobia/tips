## move to terminal

## show comands
docker

##errors
Cannot connect to the Docker daemon at unix***
--> click docker app & boot docker desktop

##concepts and commands: introductory level
image: prototype of container/use to initiate container
property: immutable/distributable/disposable/registerable for dockerhub (,DCL and so on)
how to access: download from dockerhub/create from dockerfile
how to use:
    ## download image
    $docker image pull imagename
    $docker image pull imagename:tagname
    ## show images existing in local machine
    $docker image ls
        *REPOSITORY: name of image
        *TAG: version of image
        *ID:unique id
    ## discard image
    $docker image rm imagename

container: independent enviroment created from image
status: created(not booted yet)/up(run commands)/exited(still exisit, disposable)
lifecycle: created-->up<-->exited
        *created: promptly move to up?
        *up: run prearranged commands & promptly move to exited after finish running the commands
        *exited
how to use:
    ## boot container from image
    $docker container run imagename
        *download image if the image doesn't exsit in local machine
    ## show containers existing in local machine
    $docker container ls
        *show container whose status is up
        *command: prearranged commands
        *status: container's status
    $docker container ls -a
        *show all containers including exited containers
    ## exit and stop container
    $docker container stop CONTAINER ID
    $docker container stop NAME
        *can check CONTAINER ID/NAME by ls command
        *NAME is automatically be allocated by
    ## restart exited container
    $docker container restart CONTAINER ID
    $docker container restart NAME
    ## discard container
    $docker container rm CONTAINER ID
    $docker container rm NAME
        *cannot use this command for a container whose status is up
    ## discard all containers whose status is exited
    $docker container prune
    ## discard container whose status is up
    $docker container rm -f CONTAINER ID
    ## discard container promptly after running command
    $docker container run --rm imagename command
    *
    old commands   /   new commands
    docker pull    /docker image pull
    docker images  /docker image ls
    docker rmi     /docker image rm
    docker ps      /docker container ls
    docker run     /docker container run
    docker rm      /docker container rm

    additianal commands
    ## check deffault command
    $docker image inspect imagename

    ## run command of your choice with initiating container
    $docker container run -it imagename command
    ## run command of your choice whose status is up
    ($docker container restart CONTAINER ID)
    $docker container exec (-it) CONTAINER ID command
    $docker container exec (-it) NAME command
        *can be used only to container whose status is up

    ## name container
    $docker container run --name NAME imagename

    ## detatched mode <-> foreground mode
    ## with initiating container
    $docker conainer run -(it)d imagename
    $docker container attach CONTAINER_ID
    ## with container whose status is up
    $docker container exec -d CONTAINER_ID command

##concepts and commands: intermediate level
bash: one of the shell used for OS distributed from unix(linux, mac os, ...)

    me ---commands---> shell[os(kernel,...)]
    <---outputs---
        kernel: core software for os/communicate in machine languages
        shell: software which translate assembly languages into machine languages
            bash/zsh/...
        terminal: interface application to run shell
example:
    ubuntu: one of the linux os
        me ---commands---> bash[ubuntu(kernel,...)]

    ## launch standard ubuntu enviroment
*   $ docker container run -it ubuntu:20.04
    root@c8b717457928:/#
     ^        ^
     username container id
    *status: accessing ubuntu through bash as root user
    *can use pwd, ls, ...
    *exit command:
    *-i: open standard inputs
    *-t: arrange appearance

    ## check deffault command
*   $docker image inspect imagename
    $docker image inspect ubuntu:20.04
    ## run command of your choice with initiating container
*   $docker container run -it imagename command
    $docker container run -it ubuntu:20.04 pwd
    ## run command of your choice whose status is up
    ($docker container restart CONTAINER ID)
    $docker container exec -it CONTAINER ID bash(,ls, ...)

    ## name container
    $docker container run --name NAME imagename
